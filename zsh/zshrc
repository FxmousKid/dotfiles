# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi



#------------- Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust
#------------- End of Zinit's installer chunk



#------------- Created by Zap installer
[ -f "${XDG_DATA_HOME:-$HOME/.local/share}/zap/zap.zsh" ] && source "${XDG_DATA_HOME:-$HOME/.local/share}/zap/zap.zsh"
plug "zsh-users/zsh-autosuggestions"
plug "zap-zsh/supercharge"
plug "zap-zsh/zap-prompt"
plug "zsh-users/zsh-syntax-highlighting"

# Load and initialise completion system
autoload -Uz compinit
compinit
#-------------- End of Zap installer


#--------- Powerlevel10k x Pure prompt via Zinit
zinit ice depth=1; zinit light romkatv/powerlevel10k
#--------- End of Powerlevel10k x Pure prompt 



#--------- NODE VERSION MANAGER
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
#--------- NODE VERSION MANAGER



# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh # i dont even know what this shit does..



# ||| EXPORTS |||
export PATH="~/.config/bin:$PATH"
export JAVA_HOME="/usr/lib/jvm/java-17-openjdk-17.0.9.0.9-3.fc39.aarch64//"
export PATH="/usr/lib/jvm/java-17-openjdk-17.0.9.0.9-3.fc39.aarch64/bin:$PATH"

# ||| ALIASES |||
alias ccw="cc -Wall -Wextra -Werror"
alias atuin="~/.cargo/bin/atuin"
alias norm="norminette -R CheckForbiddenSourceHeader"
alias cl="clear"
alias e="exit ; clear" 
alias fzf='ag -l -g "" | fzf'
alias szh="source $ZSHRC"
alias ezh="lvim $ZSHRC"
alias open="xdg-open"
alias elc="lvim ~/.config/lvim/config.lua && echo $?" 

alias cln42="rm -vrf ex*/.vscode ;
             rm -vrf ex*/*swp    ;
             rm -vrf .vscode     ;
             rm -vrf a.out       ;
             rm -vrf ex*/a.out   ;"


# ||| GIT ALIASES |||
alias gst="git status -b"
alias gls="git ls-files"
alias grm="git rm --cached"
alias gck="git checkout"
alias gcm="git commit -m"
alias gad="git add"
alias grs="git restore --staged"
alias gps="git push"

alias gcln42="grm -vrf ex*/.vscode ;
              grm -vrf ex*/*swp    ;
              grm -vrf .vscode     ;
              grm -vrf a.out       ;
              grm -vrf ex*/a.out   ;"



# ||| evals |||
eval "$(atuin init zsh)"


# ||| GLOBAL ENV VARS |||
